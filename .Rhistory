d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time9)
t1 <- (Sys.time9)
t1 <- (Sys.time)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t1$min
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
?strptime
strptime(t3,"%B %d, %Y %H:%M")
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
help(cars)
head(cars)
plot(cars)
help(plot)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$dist,y=cars$speed,xlab='Speed')
plot(x=cars$dist,y=cars$speed,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
?points
cars(cars,pch=2)
plot(cars,pch=2)
data(mtcars)
?boxplot
play())
play()
ls(boxplot)
ls("boxplot")
ls(mtcars)
summary(mtcars)
class(mycars)
larray(mtcars,class)
lapply(mtcars,class)
nxt()
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
swirl()
library(swirl)
rm(list=ls())
swirl()
rm(list=ls())
library(foreign)
imm23 <- read.dta(file="~imm23.dta")
imm23 <- read.dta(file="C:\Users\Cynthia\Desktop\R practice\MLM R\imm23.dta")
rm(list=ls())
imm23 <- read.dta(file="C:\Users\Cynthia\Desktop\R practice\MLM R\imm23.dta")
library(foreign)
imm23 <- read.dta(file="C:\Users\Cynthia\Desktop\R practice\MLM R\imm23.dta")
imm23 <- read.dta(file="C:\\Users\\Cynthia\\Desktop\\R practice\\MLM R\\imm23.dta")
library(Hmisc)
describe(imm23)
names(imm23)
sapply(imm23,names)
sapply(imm23,type)
sapply(imm23,colnames)
sapply(imm23,colnames)
sapply(imm23,class)
names(imm23)
names(imm23)
names(imm23)
?t.test()
whiteses <- t.test(ses~white)
whiteses <- t.test(white,ses)
whiteses <- t.test(imm23$white,imm23$ses)
whiteses
attach(imm23)
whiteses <- t.test(white,ses)
whiteses
describe(white)
attributes(white)
head(white)
summary(whiteses)
whiteses <- t.test(ses~white)
summary(whiteses)
anova(whiteses)
View(imm23)
tapply(ses,white,describe)
whiteses
names(imm23)
test1 <- lm(math~race+homework)
anova(test1)
library(lm.beta)
Ztest1 <- lm.beta(math~race+homework)
Ztest1 <- lm.beta(test1)
coef(Ztest1)
print(Ztest1)
summary(Ztest1)
Zwhiteses <- lm.beta(whiteses)
plot(homework,math)
plot(homework,math,col=red)
library(lme4)
lmer(math~(1|scid))
test1 <- lm(math~race+homework)
lmer(math~(1|scid))
lmer(math~(1|schid))
test1 <- lm(math~race+homework)
whiteses <- t.test(ses~white)
tapply(ses,white,describe)
whiteses <- t.test(ses~white)
whiteses
whiteses <- t.test(white,ses)
whiteses
?t.test()
whiteses2
whiteses <- t.test(ses~white)
?t.test()
whiteses
tapply(ses,white,describe)
whiteses <- t.test(ses~white)
whiteses
tapply(ses,white,describe)
install.packages("afex")
lmer(math~(1|schid))
summary(lmer)
summary(null)
null <- lmer(math~(1|schid))
summary(null)
?str()
str(terms(null))
whitereg <- lm(ses~white)
summary(whitereg)
Zwhitereg <- lm.beta(whitereg)
Zwhitereg
print(Zwhitereg)
summary(Zwhitereg)
names(imm23)
mod1 <- lmer(math~homework(1|schid))
mod1 <- lmer(math~homework|schid)
summary(mod1)
mod1 <- lmer(math~homework+(1|schid))
summary(mod1)
anova(mod1)
install.packages("lmerTest")
null <- lmer(math~(1|schid))
summary(null)
anova(mod1,null)
coefs(mod1)
?require()
mod1coef <- data.frame(coef(summary(mod1)))
mod1coef$p.z <- 2*(1-pnorm(abs(mod1coef$t.value)))
mod1coef
View(mod1coef)
corr(white,ses)
cor(white,ses)
cor <- cor(white,ses)
summary(cor)
coef(cor)
cor.test(white,ses)
install.packages("effsize")
cohend <- cohen.d(ses~white)
library(effsize)
cohend <- cohen.d(ses~white)
cohend
cohend2 <- cohen.d(ses,white)
cohend2
remove(list=ls())
?ggplot
?ggplot2
install.packages("ggplot2")
?diamonds
data(diamonds)
data("diamonds")
data(mtcars)
remove(list=ls())
data(diamonds)
library(ggplot2)
data(diamonds)
attributes(diamonds)
names(diamonds)
summary(diamonds)
set.seed(1410) #Makes sample reproducible
dsmall <- diamonds[sample(nrow(diamonds),100),]
qplot(carat,price,data=diamonds)
?qplot
qplot(carat,y=price,data=diamonds)
qplot(carat,y=price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(log(carat),log(price),data=diamonds)
names(diamonds)
qplot(carat,x*y*z,data=diamonds)
?qplot
qplot(carat,x*y*z,data=diamonds,ylab="volume:)
qplot(carat,x*y*z,data=diamonds,ylab="volume")
qplot(carat,x*y*z,data=diamonds,ylab="volume")
qplot(carat,price,data=dsmall,colour=color)
qplot(carat,price,data=dsmall,colour=red)
?qplot
qplot(carat,price,data=dsmall,colour=color)
names(diamonds)
qplot(carat,price,data=dsmall,shape=cut)
qplot(carat,price,data=dsmall,colour=cut)
qplot(carat,price,data=dsmall,colour=I("red")
qplot(carat,price,data=dsmall,colour=I("red"))
qplot(carat,price,data=dsmall,colour=I("red"))
qplot(carat,price,data=dsmall,colour=I("red","blue"))
qplot(carat,price,data=dsmall,colour=I("red"),alpha=I(20/100))
qplot(carat,price,data=dsmall,colour=color,alpha=I(1/10)
qplot(carat,price,data=dsmall,colour=color,alpha=I(1/10))
qplot(carat,price,data=dsmall,colour=color,alpha=I(1/10))
qplot(carat,price,data=dsmall,colour=color,alpha=I(1/5))
qplot(carat,price,data=dsmall,colour=I("red"),alpha=I(1/5)
qplot(carat,price,data=dsmall,colour=I("red"),alpha=I(1/5))
qplot(carat,price,data=dsmall,colour=I("red"),alpha=I(1/5))
qplot(carat,price,data=dsmall,shape=cut,geom=smooth)
qplot(carat,price,data=dsmall,shape=cut,geom="smooth")
qplot(carat,price,data=dsmall,shape=cut,geom="box")
qplot(carat,price,data=dsmall,shape=cut,geom="boxplot")
qplot(carat,price,data=dsmall,shape=cut,geom="line")
qplot(carat,data=dsmall,shape=cut,geom="histogram")
qplot(carat,data=dsmall,shape=cut,geom="freqpoly")
qplot(carat,data=dsmall,shape=cut,geom="density")
qplot(carat,data=dsmall,color=cut,geom="histogram")
qplot(carat,data=dsmall,color=cut,geom="freqpoly")
qplot(carat,data=dsmall,color=cut,geom="density")
qplot(carat,price,data=dsmall,color=cut,geom="boxplot")
qplot(carat,price,data=dsmall,color=cut,geom="line")
qplot(carat,price,data=dsmall,color=cut,geom="smooth")
qplot(carat,price,data=dsmall,geom=c("point,"smooth"))
qplot(carat,price,data=dsmall,geom=c("point,"smooth"))
qplot(carat,price,data=dsmall,geom=c("point","smooth"))
qplot(carat,price,data=dsmall,color=cut,geom=c("point","smooth"))
qplot(carat,price,data=diamonds,geom=c("point","smooth"))
qplot(carat,price,data=diamonds,geom=c("point","smooth"))
qplot(carat,price,data=diamonds,geom=c("point","smooth"),span=1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
library(ggplot2)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
data(diamonds)
#Create smaller dataset
set.seed(1410) #Makes sample reproducible
dsmall <- diamonds[sample(nrow(diamonds),100),]
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span = 1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span = .2)
qplot(carat,price,data=dsmall,geom=c("point","smooth"))
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span = .2)
span = 1)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),span = 1)
geom = c("point", "smooth"),span = 1)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),span = 1)
qplot(carat,price,data=dsmall,geom=c("point","smooth"))
qplot(carat,price,data=dsmall,geom=c("point","smooth"),span=1)
install.packages("splines")
qplot(carat,price,data=dsmall,geom=c("point","smooth"),method='lm')
library(splines)
qplot(carat,price,data=dsmall,geom=c("point","smooth"),method='lm')
swirl()
library(swirl)
remove(list=ls())
swirl()
swirl()
install_from_swirl("Data Analysis")
swirl()
cars
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
range(cars$price)
61.9-7.4
var(cars$price)
sd(cars$price)
15
35-20
35-18
10
25
4
summary(cars$price)
rm(ls())
<- read.csv("C:\Users\Cynthia\Desktop\Dropbox\PAEA\Cynthia Yuen\2016 CASPA analysis\Edited WebAdmit exports\CSV files\2013-14-applicants-only-for-CASPA-2016-pres - Copy.csv")
CASPA1314<- read.csv("C:\Users\Cynthia\Desktop\Dropbox\PAEA\Cynthia Yuen\2016 CASPA analysis\Edited WebAdmit exports\CSV files\2013-14-applicants-only-for-CASPA-2016-pres - Copy.csv")
CASPA1314<- read.csv("C:/Users/Cynthia/Desktop/Dropbox/PAEA/Cynthia Yuen/2016 CASPA analysis/Edited WebAdmit exports/CSV files/2013-14-applicants-only-for-CASPA-2016-pres - Copy.csv")
CASPA1314<- read.csv("C:/Users/Cynthia/Desktop/Dropbox/PAEA/Cynthia Yuen/2016 CASPA analysis/Edited WebAdmit exports/CSV files/2013-14-applicants-only-for-CASPA-2016-pres - Copy.csv")
View(CASPA1314)
attach(CASPA1314)
print(mean(CLEAN_AGE))
print(mean(CLEAN_AGE,na.rm=TRUE))
print(range(CLEAN_AGE,na.rm=TRUE))
print(median(CLEAN_AGE,na.rm=TRUE))
print(mean(CLEANcum_ug_nonscience_gpa,na.rm=TRUE)
print(mean(CLEANcum_ug_science_gpa,na.rm=TRUE)
print(mean(CLEANcum_ug_total_gpa,na.rm=TRUE)
print(mean(CLEANcum_ug_nonscience_gpa,na.rm=TRUE))
print(mean(CLEANcum_ug_science_gpa,na.rm=TRUE))
print(mean(CLEANcum_ug_total_gpa,na.rm=TRUE))
print(mean(CLEANcum_ug_nonscience_gpa,na.rm=TRUE))
print(mean(GRE_QUANT_hi,na.rm=TRUE))
print(mean(GRE_VERB_HI,na.rm=TRUE))
print(mean(GRE_WRIT_HI,na.rm=TRUE))
print(mean(GRE_QUANT_AVG,na.rm=TRUE))
print(mean(GRE_VERB_AVG,na.rm=TRUE))
print(mean(GRE_WRIT_AVG,na.rm=TRUE))
print(table(gender))
print(frequency(gender))
print(prop.table(gender))
install.packages('devtools')
devtools::install_github('IRkernel/IRkernel')
install.packages('digest')
install.packages("digest")
IRkernel::installspec()
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
df = read_csv("reduced_health_Survey_GW.csv", header = T)
df = read.csv("reduced_health_Survey_GW.csv", header = T)
setwd("C:/Users/Cynthia/Desktop/Bootcamp_Github/ready_project_one")
df = read.csv("reduced_health_Survey_GW.csv", header = T)
df$bmi[df$bmi == 99.9] <- NA
describe(df$bmi)
describe(df$bmi)
library(psych)
describe(df$bmi)
walk_bmi = lm(df$heal10min ~ df$bmi)
summary(walk_bmi)
View(df)
# Fruit/veg missing
df$heal13[df$heal13 == "Don't know" |
df$heal13 == "Refused"] <- NA
table(df$heal13)
df$black = ifelse(df$healask == "Black non-hispanic")
table(df$black)
# Race dummies
df$black = ifelse(df$healask == "Black non-hispanic",
1,0)
table(df$black)
df$black = ifelse(df$healask == "Black non-hispanic",
1,0)
df$hisp= ifelse(df$healask == "Hispanic",
1,0)
df$white = ifelse(df$healask == "White non-hispanic",
1,0)
table(df$black)
table(df$white)
table(df$hisp)
df$sex01 = ifelse(df$sex == "Male", 01)
table(df$sex01)
table(df$sex)
df$sex01 = ifelse(df$sex == "Male", 0,1)
table(df$sex01)
table(df$sex)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp,
data = df, family = "binary")
data = df, "family = "binomial")
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp,
data = df, family = "binomial")
summary(fruit_race)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ white + hisp,
data = df, family = "binomial")
# Age missing
df$age[df$age = 99] <- NA
# Age missing
df$age[df$age == 99] <- NA
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age,
data = df, family = "binomial")
summary(fruit_race)
df$age
# Age missing
df$age[df$age == "Refused"] <- NA
fruit_race = glm(heal13 ~ black + hisp + age,
data = df, family = "binomial")
summary(fruit_race)
df$age
type(df$age)
typeof(df$age)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age,
data = df, family = "binomial")
summary(fruit_race)
typeof(df$age)
df$age <- as.numeric(df$age)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age,
data = df, family = "binomial")
summary(fruit_race)
# BMI differs by ease of food access
fruit_bmi = ttest(bmi ~ heal13, data = df)
# BMI differs by ease of food access
fruit_bmi = t.test(bmi ~ heal13, data = df)
summary(fruit_bmi)
# BMI differs by ease of food access
fruit_bmi = t.test(bmi, heal13, data = df)
# BMI differs by ease of food access
fruit_bmi = t.test(df$bmi, df$heal13)
summary(fruit_bmi)
df$bmi
df$heal13
# BMI differs by ease of food access
fruit_bmi = t.test(df$bmi, df$sex01)
summary(fruit_bmi)
# BMI differs by ease of food access
fruit_bmi  <-  t.test(df$bmi, df$sex01)
anova(fruit_bmi)
summary(fruit_bmi)
# BMI differs by ease of food access
fruit_bmi  <-  t.test(df$bmi, df$sex01)
summary(fruit_bmi)
# BMI differs by ease of food access
fruit_bmi <-  t.test(df$bmi ~ df$sex01)
summary(fruit_bmi)
# BMI differs by ease of food access
t.test(df$bmi ~ df$sex01)
# BMI differs by ease of food access
t.test(df$bmi ~ df$heal13)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age + sex01
data = df, family = "binomial")
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age + sex01,
data = df, family = "binomial")
summary(fruit_race)
exp(coef(fruit_race))
library(car)
# Educ as continuous
df$educ_cont <- recode(df$educ, "
'Less than high school graduate' = 1;
'High school graduate' = 2;
'Some college' = 3;
'Graduated college' = 4;
'Graduate school or more' = 5;
'Technical school/other' = NA; 'Refused' = NA")
table(df$educ_cont)
walk_bmi = lm(df$heal10min ~ df$bmi)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age + sex01 + educ_cont,
data = df, family = "binomial")
summary(fruit_race)
df$edu_cont <-  as.numeric(df$edu_cont)
df$educ_cont <- recode(df$educ, "
'Less than high school graduate' = 1;
'High school graduate' = 2;
'Some college' = 3;
'Graduated college' = 4;
'Graduate school or more' = 5;
'Technical school/other' = NA; 'Refused' = NA")
table(df$educ_cont)
df$educ_cont <-as.numeric(df$educ_cont)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age + sex01 + educ_cont,
data = df, family = "binomial")
summary(fruit_race)
df$educ_cont <- recode(df$educ, "
'Less than high school graduate' = 1;
'High school graduate' = 2;
'Some college' = 3;
'Graduated college' = 4;
'Graduate school or more' = 5;
'Technical school/other' = NA; 'Refused' = NA")
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ black + hisp + age + sex01 + educ_cont,
data = df, family = "binomial")
summary(fruit_race)
# Odds of fruit/veg expense by race
fruit_race = glm(heal13 ~ healask + age + sex01 + educ_cont,
data = df, family = "binomial")
summary(fruit_race)
# BMI differs by food access and race
lm(df$bmi ~ df$heal13, df$healask)
summary(lm(df$bmi ~ df$heal13, df$healask))
# BMI differs by food access and race
summary(lm(df$bmi ~ df$heal13 + df$healask))
# BMI differs by food access and race
summary(lm(df$bmi ~ df$heal13 + df$black + df$hisp))
# BMI differs by food access and race
summary(lm(df$bmi ~ df$heal13 + df$black + df$hisp + df$heal13*df$black + df$heal13*df$hisp))
# BMI differs by food access and race
summary(lm(df$bmi ~ df$heal13 + df$black + df$hisp))
# BMI differs by food access and race
summary(lm(df$bmi ~ df$heal13))
a
# BMI differs by ease of food access
t.test(df$bmi ~ df$heal13)
install.packages(Rcmdr)
install.packages("Rcmdr")
install.packages("Rcmdr")
library(Rcmdr)
